{% extends "layout.njk" %}

{% from "table.njk" import tableStart, tableEnd, row, rowWithMultipleValue %}
{% from "form.njk" import csrfProtection, submitButton, errorSummary %}
{% from "../../../views/macro/statementOfTruth.njk" import statementOfTruth %}
{% from "party/details.njk" import partyDetailsSummaryFragment %}

{% set title = t('Money claim') %}
{% set heading = t('Check your answers') %}

{% block content %}
  <form novalidate method="post">
    {{ csrfProtection(csrf) }}

    {{ tableStart('theirDetails', 'Their details (defendant)') }}
    {{
      partyDetailsSummaryFragment(
        partyDetails = defendant,
        showCorrespondenceAddressSection = false,
        changeLinks = {
          dateOfBirth: dateOfBirthUrl
        }
      )
    }}
    {% if claim.claimData.defendant.email %}
      {{ row('Email', claim.claimData.defendant.email) }}
    {% endif %}
    {{ tableEnd() }}

    {{ tableStart('payment', 'Payment') }}

    {{ row('Has the defendant paid some of the amount owed?',
      draft.paidAmount.option.value | capitalize, changeLink = paidAmountUrl, bottomBorder = false) }}
    {{ row('Amount to be paid by defendant', amountToBePaid | numeral) }}

    {% if draft.paymentOption.option.value == 'IMMEDIATELY' %}
      {{ row('When you want the defendant to pay',
        draft.paymentOption.option.displayValue, changeLink = paymentOptionUrl, bottomBorder = true) }}
    {% else %}
      {{ row('How you want the defendant to pay',
        draft.paymentOption.option.displayValue, changeLink = paymentOptionUrl, bottomBorder = false) }}
      {% if draft.paymentOption.option.value == 'FULL_BY_SPECIFIED_DATE' %}
        {{ row('When you want the defendant to pay',
          draft.payBySetDate.date.toMoment() | date, bottomBorder = true) }}
      {% endif %}
      {% if draft.paymentOption.option.value == 'INSTALMENTS' %}
        {{ row('Instalments of',
          draft.repaymentPlan.instalmentAmount | numeral, bottomBorder = false) }}
        {{ row('When you want them to make the first payment',
          draft.repaymentPlan.firstPaymentDate.toMoment() | date, bottomBorder = false) }}
        {{ row('How often you want them to make this payment',
          draft.repaymentPlan.paymentSchedule.displayValue, bottomBorder = true) }}
      {% endif %}
    {% endif %}

    {{ tableEnd() }}

    <div class="column-two-thirds">
      <div class="form-group">
        {{ statementOfTruth(
          form,
          title = 'Declaration',
          label = 'I declare that the details I have given are true to the best of my knowledge.',
          isQualified = claim.claimData.claimant.isBusiness(),
          typeOfStatement = 'declaration')
        }}

        {{ submitButton('Sign and submit') }}
        <input type="hidden" name="type" value="{{ form.model.type }}">
      </div>
    </div>
  </form>
{% endblock %}
