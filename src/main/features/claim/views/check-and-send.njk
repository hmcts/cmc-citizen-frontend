{% extends "layout.njk" %}

{% from "table.njk" import tableStart, tableEnd, row %}
{% from "form.njk" import csrfProtection, submitButton, errorSummary %}
{% from "statementOfTruth.njk" import statementOfTruth %}
{% from "timelineCheckAndSend.njk" import timelineCheckAndSend %}
{% from "evidenceCheckAndSend.njk" import evidenceCheckAndSend %}
{% from "party/details.njk" import partyDetailsSummaryFragment %}

{% set title = t('Money claim') %}
{% set heading = t('Check your answers before submitting your claim') %}

{% block content %}
  <form novalidate method="post">
    {{ csrfProtection(csrf) }}

    {{ tableStart('yourDetails', 'Your details (claimant)') }}
    {{
        partyDetailsSummaryFragment(
          partyDetails = draftClaim.claimant.partyDetails,
          changeLinks = {
            name: claimantPartyDetailsPageUri,
            address: claimantPartyDetailsPageUri,
            dateOfBirth: paths.claimantDateOfBirthPage.uri
          }
        )
    }}
    {{ row('Contact number (optional):', draftClaim.claimant.mobilePhone.number, paths.claimantMobilePage.uri) }}
    {{ tableEnd() }}

    {{ tableStart('theirDetails', 'Their details (defendant)') }}
      {{
          partyDetailsSummaryFragment(
            partyDetails = draftClaim.defendant.partyDetails,
            showCorrespondenceAddressSection = false,
              changeLinks = {
              name: defendantPartyDetailsPageUri,
              address: defendantPartyDetailsPageUri
           }
        )
    }}

    {{ row('Email:', draftClaim.defendant.email.address, paths.defendantEmailPage.uri) }}
    {{ tableEnd() }}

    {{ tableStart('claimAmount', 'Claim amount') }}
    {{ row('Claim amount breakdown', '', paths.amountPage.uri, bottomBorder = false, bold = true) }}

    {% for each in draftClaim.amount.rows %}
      {% if each.reason %}
        {{ row(each.reason, each.amount, bottomBorder = false) }}
      {% endif %}
    {% endfor %}

    {{ row('Total', claimAmountTotal.claimAmount | numeral, bold = true )}}

    {% if (interestClaimed === true) %}
      {% if (draftClaim.interest.rate) %}
        {{ row('Interest rate:', draftClaim.interest.rate | numeral('0,0.00') + '\% \(' + draftClaim.interest.type + '\)' , paths.interestPage.uri) }}
      {% endif %}
      {% if payAtSubmission === false %}
        {{ row('Date interest is claimed from:', draftClaim.interestDate.date.asString() | date, paths.interestDatePage.uri) }}
      {% else %}
        {{ row('Date interest is claimed from:', t( 'Date you submit the claim' ), paths.interestDatePage.uri) }}
      {% endif %}
      {% if (claimAmountTotal.interestAmount) %}
        {{ row('Interest:', claimAmountTotal.interestAmount | numeral, paths.interestPage.uri) }}
      {% endif %}
    {% else %}
      {{ row('Interest rate:', t('I don’t want to claim interest'), paths.interestPage.uri )}}
    {% endif %}

    {{ row('Claim fee:', claimAmountTotal.feeAmount | numeral) }}
    {{ row('Total amount you’re claiming:',  claimAmountTotal.totalAmountTillToday | numeral) }}
    {{ tableEnd() }}

    {{ tableStart('claimDetails', 'Claim details') }}
    {{ row('Why you’re owed the money:', draftClaim.reason.reason, paths.reasonPage.uri ) }}
    {{
      timelineCheckAndSend(
        header = 'Timeline of what happened',
        timeline = draftClaim.timeline.getPopulatedRowsOnly(),
        url = paths.timelinePage.uri
      )
    }}
    {{
      evidenceCheckAndSend(
        header = 'Your evidence (optional)',
        evidence = draftClaim.evidence.getPopulatedRowsOnly(),
        url = paths.evidencePage.uri
      )
    }}
    {{ tableEnd() }}

    <div class="column-two-thirds">
      <div class="form-group">
        {{ statementOfTruth(
            form,
            statementOfTruthType = 'claim',
            label = 'I believe that the facts stated in this claim are true.',
            isQualified = partyAsCompanyOrOrganisation
          )
        }}

        {% set submitButtonLabel = t('Submit and continue to payment ') %}
        {{ submitButton(submitButtonLabel + '(' + (claimAmountTotal.feeAmount | numeral) + ')') }}
        <input type="hidden" name="type" value="{{ form.model.type }}">
      </div>
    </div>
  </form>
{% endblock %}
