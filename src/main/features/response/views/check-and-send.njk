{% extends "layout.njk" %}

{% from "table.njk" import tableStart, tableEnd, row %}
{% from "form.njk" import csrfProtection, submitButton, errorSummary %}
{% from "statementOfTruth.njk" import statementOfTruth %}
{% from "party/details.njk" import partyDetailsSummaryFragment %}
{% from "timelineCheckAndSend.njk" import timelineCheckAndSend %}
{% from "evidenceCheckAndSend.njk" import evidenceCheckAndSend %}

{% set heading = 'Check your answers before submitting your response' %}

{% block content %}
  <form novalidate method="post">
    {{ csrfProtection(csrf) }}

    {{ tableStart('yourDetails', 'Your details') }}
    {{
      partyDetailsSummaryFragment(
        partyDetails = draft.defendantDetails.partyDetails,
        changeLinks = {
          contactPerson: ResponsePaths.defendantYourDetailsPage.evaluateUri({ externalId: claim.externalId }),
          address: ResponsePaths.defendantYourDetailsPage.evaluateUri({ externalId: claim.externalId }),
          dateOfBirth: ResponsePaths.defendantDateOfBirthPage.evaluateUri({ externalId: claim.externalId })
        }
      )
    }}
    {{ row(label = 'Contact number (optional)', value = draft.defendantDetails.mobilePhone.number, changeLink = ResponsePaths.defendantMobilePage.evaluateUri({ externalId: claim.externalId }), bold = true) }}

    {{ tableEnd() }}

    {{ tableStart('moneyOwed', 'Your response to the claim') }}

    {{ row(
        label = 'Do you owe the money claimed?',
        value = t(draft.response.type.displayValue) | capitalize,
        changeLink = ResponsePaths.responseTypePage.evaluateUri({ externalId: claim.externalId }),
        bold = true
       )
    }}

    {% if draft.response.type === ResponseType.DEFENCE %}
      {% if draft.rejectAllOfClaim.option === RejectAllOfClaimOption.ALREADY_PAID %}
        {% set rejectAllOption = 'I’ve already paid the claim in full' %}
      {% endif %}

      {% if draft.rejectAllOfClaim.option === RejectAllOfClaimOption.DISPUTE %}
        {% set rejectAllOption = 'I dispute the claim' %}
      {% endif %}

      {% if draft.rejectAllOfClaim.option === RejectAllOfClaimOption.COUNTER_CLAIM %}
        {% set rejectAllOption = 'Defend now and also make a counterclaim' %}
      {% endif %}

      {{ row(label = 'Why do you reject all of this claim?', value = rejectAllOption, changeLink = ResponsePaths.defenceRejectAllOfClaimPage.evaluateUri({ externalId: claim.externalId }), bold = true) }}
    {% endif %}

    {{ tableEnd() }}

    {% if draft.isResponseFullyAdmitted() %}
      {{ tableStart('whenWillYouPay', 'When will you pay') }}
      {{ row(label = 'When will you pay', value = t(draft.fullAdmission.paymentOption.option.displayValue) | capitalize, changeLink = FullAdmissionPaths.paymentOptionPage.evaluateUri({ externalId: claim.externalId }), bold = true) }}
      {% if draft.fullAdmission.paymentOption.isOfType(DefendantPaymentType.BY_SET_DATE) %}
        {{ row(label = 'When you’ll pay the amount', value = draft.fullAdmission.paymentDate.date.toMoment() | date, changeLink = FullAdmissionPaths.paymentDatePage.evaluateUri({ externalId: claim.externalId }), bold = true) }}
      {% endif %}
      {% if draft.fullAdmission.paymentOption.isOfType(DefendantPaymentType.INSTALMENTS) %}
        {{ row(label = 'Regular payments of', value = draft.fullAdmission.paymentPlan.instalmentAmount | numeral, changeLink = FullAdmissionPaths.paymentPlanPage.evaluateUri({ externalId: claim.externalId }), bold = true, bottomBorder = false) }}
        {{ row(label = 'Frequency of payments', value = t(draft.fullAdmission.paymentPlan.paymentSchedule.displayValue), bold = true, bottomBorder = false) }}
        {{ row(label = 'Make the first payment on', value = draft.fullAdmission.paymentPlan.firstPaymentDate.toMoment() | date, bold = true) }}
      {% endif %}
      {{ tableEnd() }}
    {% endif %}

    {% if statementOfMeansIsApplicable and draft.statementOfMeans %}
      {% include "./statement-of-means/check-and-send.njk" %}
    {% endif %}

    {% if draft.isResponseRejectedFullyWithAmountClaimedPaid() %}
      {{ tableStart('yourResponse', 'Your response') }}
        {{ row(label = 'When did you pay this amount?', value = draft.whenDidYouPay.date.toMoment() | date, changeLink = ResponsePaths.whenDidYouPay.evaluateUri({ externalId: claim.externalId }), bold = true) }}
        {{ row(label = 'How did you pay the amount claimed?', value = draft.whenDidYouPay.text, changeLink = ResponsePaths.whenDidYouPay.evaluateUri({ externalId: claim.externalId }), bold = true) }}
      {{ tableEnd() }}
    {% endif %}

    {% if draft.isResponsePartiallyAdmitted() %}

      {{ tableStart('yourResponse', 'Your response') }}

        {{
          row(
            label = 'How much money have you paid?',
            value = draft.partialAdmission.howMuchHaveYouPaid.amount | numeral,
            changeLink = PartAdmissionPaths.howMuchHaveYouPaid.evaluateUri({ externalId: claim.externalId }),
            bold = true
          )
        }}
        {{
           row(
             label = 'When did you pay this amount?',
             value = draft.partialAdmission.howMuchHaveYouPaid.date.toMoment() | date,
             changeLink = PartAdmissionPaths.howMuchHaveYouPaid.evaluateUri({ externalId: claim.externalId }),
             bold = true
           )
        }}

        {{
           row(
             label = 'How did you pay the amount claimed?',
             value = draft.partialAdmission.howMuchHaveYouPaid.text,
             changeLink = PartAdmissionPaths.howMuchHaveYouPaid.evaluateUri({ externalId: claim.externalId }),
             bold = true
           )
        }}

        {{
           row(
             label = 'Why do you disagree with the claim amount?',
             value = draft.partialAdmission.whyDoYouDisagree.text,
             changeLink = PartAdmissionPaths.whyDoYouDisagreePage.evaluateUri({ externalId: claim.externalId }),
             bold = true
           )
        }}

        {{
          timelineCheckAndSend(
            header = 'Timeline of what happened (optional)',
            timeline = draft.partialAdmission.timeline.getPopulatedRowsOnly(),
            url = ResponsePaths.timelinePage.evaluateUri({ externalId: claim.externalId }),
            bottomBorder = false
          )
        }}
        {{ row(label = 'Comments about their timeline (optional)', value = draft.partialAdmission.timeline.comment | default(''), bold = true) }}

        {{
          evidenceCheckAndSend(
            header = 'Your evidence (optional)',
            evidence = draft.partialAdmission.evidence.getPopulatedRowsOnly(),
            url = ResponsePaths.evidencePage.evaluateUri({ externalId: claim.externalId }),
            bottomBorder = false
          )
        }}

        {{ row(label = 'Comments about their evidence (optional)', value = draft.partialAdmission.evidence.comment | default(''), bold = true) }}
    {% endif %}

    {% if draft.isResponseRejectedFullyWithDispute() %}
      {{ tableStart('yourDefence', 'Response details') }}
      {{ row(label = 'Why you disagree with the claim', value = draft.defence.text, changeLink = ResponsePaths.defencePage.evaluateUri({ externalId: claim.externalId }), bold = true) }}

      {{
        timelineCheckAndSend(
          header = 'Timeline of what happened (optional)',
          timeline = draft.timeline.getPopulatedRowsOnly(),
          url = ResponsePaths.timelinePage.evaluateUri({ externalId: claim.externalId })
        )
      }}
      {{ row(label = 'Comments about their timeline (optional)', value = draft.timeline.comment | default(''), bold = true) }}

      {{
        evidenceCheckAndSend(
          header = 'Your evidence (optional)',
          evidence = draft.evidence.getPopulatedRowsOnly(),
          url = ResponsePaths.evidencePage.evaluateUri({ externalId: claim.externalId })
        )
      }}
      {{ row(label = 'Comments about their evidence (optional)', value = draft.evidence.comment | default(''), bold = true) }}
      {{ tableEnd() }}
    {% endif %}

    {% if draft.isResponseRejectedFullyWithDispute() %}
      {{ tableStart('freeMediation', 'Free mediation') }}
      {{ row(label = 'Free mediation', value = t(draft.freeMediation.option) | capitalize, changeLink = ResponsePaths.freeMediationPage.evaluateUri({ externalId: claim.externalId }), bold = true) }}
      {{ tableEnd() }}
    {% endif %}

    <div class="column-two-thirds">
      <div class="form-group">
        {{
          statementOfTruth(
            form,
            statementOfTruthType = 'response',
            label = 'I believe that the facts stated in this response are true.',
            isQualified = (signatureType === SignatureType.QUALIFIED)
          )
        }}

        {{ submitButton('Submit response') }}

        <input type="hidden" name="type" value="{{ form.model.type }}">
      </div>
    </div>
  </form>
{% endblock %}
