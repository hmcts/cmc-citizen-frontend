{% extends "layout.njk" %}

{% from "table.njk" import tableStart, tableEnd, row, rowWithMultipleValue %}
{% from "form.njk" import csrfProtection, submitButton, errorSummary, checkboxGroup %}
{% from "statement-of-truth.njk" import statementOfTruth %}
{% from "party/details.njk" import partyDetailsSummaryFragment %}

{% set title = t('Money claim') %}
{% set heading = t('Check your answers before submitting your response') %}

{% block content %}
  <form novalidate method="post">
    {{ csrfProtection(csrf) }}

    {{ tableStart('yourDetails', 'Your details') }}
    {{
      partyDetailsSummaryFragment(
        partyDetails = draft.defendantDetails.partyDetails,
        changeLinks = {
          contactPerson: paths.defendantYourDetailsPage.evaluateUri({ externalId: claim.externalId }),
          address: paths.defendantYourDetailsPage.evaluateUri({ externalId: claim.externalId }),
          dateOfBirth: paths.defendantDateOfBirthPage.evaluateUri({ externalId: claim.externalId })
        }
      )
    }}
    {{ row('Phone:', draft.defendantDetails.mobilePhone.number, paths.defendantMobilePage.evaluateUri({ externalId: claim.externalId })) }}

    {{ tableEnd() }}

    {{ tableStart('moneyOwed', 'Do you owe the money claimed?') }}

    {{ row('Do you owe the money claimed?', t(draft.response.type.displayValue) | capitalize, paths.responseTypePage.evaluateUri({ externalId: claim.externalId })) }}

    {% if draft.response.type === ResponseType.OWE_SOME_PAID_NONE %}
      {% if draft.rejectPartOfClaim.option === RejectPartOfClaimOption.PAID_WHAT_BELIEVED_WAS_OWED %}
        {% set rejectPartOption = 'I’ve paid what I believe I owe' %}
      {% endif %}

      {% if draft.rejectPartOfClaim.option === RejectPartOfClaimOption.AMOUNT_TOO_HIGH %}
        {% set rejectPartOption = 'The claim amount is too much' %}
      {% endif %}

      {{ row('Why are you rejecting part of this claim?', t(rejectPartOption), paths.defenceRejectPartOfClaimPage.evaluateUri({ externalId: claim.externalId })) }}
    {% endif %}

    {% if draft.response.type === ResponseType.OWE_NONE %}
      {% if draft.rejectAllOfClaim.option === RejectAllOfClaimOption.ALREADY_PAID %}
        {% set rejectAllOption = 'I’ve already paid the claim in full' %}
      {% endif %}

      {% if draft.rejectAllOfClaim.option === RejectAllOfClaimOption.DISPUTE %}
        {% set rejectAllOption = 'I dispute the claim' %}
      {% endif %}

      {% if draft.rejectAllOfClaim.option === RejectAllOfClaimOption.COUNTER_CLAIM %}
        {% set rejectAllOption = 'Defend now and also make a counterclaim' %}
      {% endif %}

      {{ row('Why do you reject all of this claim?', t(rejectAllOption), paths.defenceRejectAllOfClaimPage.evaluateUri({ externalId: claim.externalId })) }}
    {% endif %}

    {{ tableEnd() }}

    {% if draft.response.type === ResponseType.OWE_SOME_PAID_NONE and toBoolean(featureToggles.partialAdmission) %}

      {{ tableStart('yourResponse', 'Your response') }}

      {% if draft.rejectPartOfClaim.option === RejectPartOfClaimOption.AMOUNT_TOO_HIGH %}
        {{ row('How much money do you believe you owe?', draft.howMuchOwed.text, paths.defendantHowMuchPaid.evaluateUri({ externalId: claim.externalId })) }}
      {% endif %}

      {% if draft.rejectPartOfClaim.option === RejectPartOfClaimOption.PAID_WHAT_BELIEVED_WAS_OWED %}
        {{ row('Why this is what you owe?', draft.howMuchIsPaid.text, paths.defendantHowMuchOwed.evaluateUri({ externalId: claim.externalId })) }}
      {% endif %}

      {% set timelineCode = '<ul>' %}
      {% for row in draft.timeline.rows %}
        {% set timelineCode = timelineCode + '<li><div class="bold">' + row.date + '</div>' + row.description + ' </li>' %}
      {% endfor %}
      {% set timelineCode = timelineCode+ '</ul>' %}

      {{ row('Your timeline of events (optional)', timelineCode | safe, paths.timelinePage.evaluateUri({ externalId: claim.externalId })) }}

      {% set evidenceCode = '<ul>' %}
      {% for row in draft.evidence.rows %}
        {% if row.type %}
          {% set evidenceCode = evidenceCode + '<li><div class="bold">' + row.type.displayValue + '</div>' + row.description + ' </li>' %}
        {% endif %}
      {% endfor %}
      {% set evidenceCode = evidenceCode + '</ul>' %}

      {{ row('Your evidence (optional)', evidenceCode | safe, paths.evidencePage.evaluateUri({ externalId: claim.externalId })) }}

      {% if draft.requireDefence() %}
        {{ row('Your defence', draft.defence.text, paths.defencePage.evaluateUri({ externalId: claim.externalId })) }}

        {{ row('Free mediation', t(draft.freeMediation.option) | capitalize, paths.freeMediationPage.evaluateUri({ externalId: claim.externalId })) }}
      {% endif %}

      {{ tableEnd() }}

    {% endif %}

    {{
      statementOfTruth(
        form,
        label = 'I believe that the facts stated in this claim are true',
        isQualified = (signatureType === SignatureType.QUALIFIED)
      )
    }}

    {{ submitButton('Submit response') }}

    <input type="hidden" name="type" value="{{ form.model.type }}">
  </form>
{% endblock %}
