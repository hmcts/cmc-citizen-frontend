{% extends "layout.njk" %}

{% from "table.njk" import tableStart, tableEnd, row, rowWithMultipleValue %}
{% from "form.njk" import csrfProtection, submitButton, errorSummary %}
{% from "statementOfTruth.njk" import statementOfTruth %}
{% from "party/details.njk" import partyDetailsSummaryFragment %}
{% from "timelineCheckAndSend.njk" import timelineCheckAndSend %}
{% from "evidenceCheckAndSend.njk" import evidenceCheckAndSend %}
{% from "./macro/check-and-send/admission.njk" import notImmediatePayment, whenWillYouPayRow %}
{% from "components/free-mediation/freeMediationCheckAndSendBlock.njk" import freeMediationBlock %}

{% set heading = 'Check your answers' %}

{% block content %}
  <form novalidate method="post">
    {{ csrfProtection(csrf) }}

    {{ tableStart('yourDetails', 'Your details') }}
    {{
      partyDetailsSummaryFragment(
        partyDetails = draft.defendantDetails.partyDetails,
        changeLinks = {
          contactPerson: ResponsePaths.defendantYourDetailsPage.evaluateUri({ externalId: claim.externalId }),
          address: ResponsePaths.defendantYourDetailsPage.evaluateUri({ externalId: claim.externalId }),
          dateOfBirth: ResponsePaths.defendantDateOfBirthPage.evaluateUri({ externalId: claim.externalId })
        }
      )
    }}
    {{ row(label = 'Contact number (optional)', value = draft.defendantDetails.mobilePhone.number, changeLink = ResponsePaths.defendantMobilePage.evaluateUri({ externalId: claim.externalId }), bold = true) }}

    {{ tableEnd() }}

    {{ tableStart('moneyOwed', 'Your response to the claim') }}

    {{ row(
        label = 'Do you owe the money claimed?',
        value = t(draft.response.type.displayValue) | capitalize,
        changeLink = ResponsePaths.responseTypePage.evaluateUri({ externalId: claim.externalId }),
        bold = true
       )
    }}

    {% if admissionsApplicable and draft.isResponsePartiallyAdmitted() %}
      {{ row(
        label = 'Have you paid the claimant the amount you admit you owe?',
        value = t(draft.partialAdmission.alreadyPaid.option.option) | capitalize,
        changeLink = PartAdmissionPaths.alreadyPaidPage.evaluateUri({ externalId: claim.externalId }),
        bold = true
      )
      }}
    {% endif %}

    {% if draft.response.type === ResponseType.DEFENCE %}
      {% if draft.rejectAllOfClaim.option === RejectAllOfClaimOption.ALREADY_PAID %}
        {% set rejectAllOption = 'Iâ€™ve paid what I believe I owe' %}
      {% endif %}

      {% if draft.rejectAllOfClaim.option === RejectAllOfClaimOption.DISPUTE %}
        {% set rejectAllOption = 'I dispute all of the claim' %}
      {% endif %}

      {% if draft.rejectAllOfClaim.option === RejectAllOfClaimOption.COUNTER_CLAIM %}
        {% set rejectAllOption = 'Defend now and also make a counterclaim' %}
      {% endif %}

      {{ row(label = 'Why do you reject all of this claim?', value = rejectAllOption, changeLink = ResponsePaths.defenceRejectAllOfClaimPage.evaluateUri({ externalId: claim.externalId }), bold = true) }}

    {% endif %}

    {% if admissionsApplicable and draft.isResponseFullyAdmitted() and draft.fullAdmission.paymentIntention.paymentOption.isOfType(DefendantPaymentType.IMMEDIATELY) %}
      {{
      whenWillYouPayRow(
        value = t(draft.fullAdmission.paymentIntention.paymentOption.option.displayValue) | capitalize,
        url = FullAdmissionPaths.paymentOptionPage.evaluateUri({ externalId: claim.externalId })
      )
      }}
    {% endif %}

    {{ tableEnd() }}

    {% if admissionsApplicable and draft.isResponsePartiallyAdmitted() %}

      {{ tableStart('responseDetails', 'Response details') }}

      {% if draft.isResponsePartiallyAdmittedAndAlreadyPaid() %}

        {{
          row(
            label = 'How much money have you paid?',
            value = draft.partialAdmission.howMuchHaveYouPaid.amount | numeral,
            changeLink = PartAdmissionPaths.howMuchHaveYouPaidPage.evaluateUri({ externalId: claim.externalId }),
            bottomBorder = false,
            bold = true
          )
        }}
        {{
          row(
            label = 'When did you pay this amount?',
            value = draft.partialAdmission.howMuchHaveYouPaid.date.toMoment() | date,
            bottomBorder = false,
            bold = true
          )
        }}

        {{
          row(
            label = 'How did you pay the amount claimed?',
            value = draft.partialAdmission.howMuchHaveYouPaid.text,
            bottomBorder = true,
            bold = true
          )
        }}

      {% else %}

        {{
          row(
            label = 'How much money do you admit you owe?',
            value = draft.partialAdmission.howMuchDoYouOwe.amount | numeral,
            changeLink = PartAdmissionPaths.howMuchDoYouOwePage.evaluateUri({ externalId: claim.externalId }),
            bottomBorder = false,
            bold = true
          )
        }}

      {% endif %}

      {{
        row(
          label = 'Why do you disagree with the amount claimed?',
          value = draft.partialAdmission.whyDoYouDisagree.text,
          changeLink = PartAdmissionPaths.whyDoYouDisagreePage.evaluateUri({ externalId: claim.externalId }),
          bold = true
        )
      }}

      {% if timeline is defined %}
        {{
          timelineCheckAndSend(
            header = 'Timeline of what happened (optional)',
            timeline = draft.partialAdmission.timeline.getPopulatedRowsOnly(),
            url = ResponsePaths.timelinePage.evaluateUri({ externalId: claim.externalId }),
            bottomBorder = false
          )
        }}
        {{ row(label = 'Comments about their timeline (optional)', value = draft.partialAdmission.timeline.comment | default(''), bold = true) }}
      {% endif %}
      {% if evidence is defined %}
        {{
          evidenceCheckAndSend(
            header = 'Your evidence (optional)',
            evidence = draft.partialAdmission.evidence.getPopulatedRowsOnly(),
            url = ResponsePaths.evidencePage.evaluateUri({ externalId: claim.externalId }),
            bottomBorder = false
          )
        }}
        {{ row(label = 'Comments about their evidence (optional)', value = draft.partialAdmission.evidence.comment | default(''), bold = true) }}
      {% endif %}
    {% endif %}

    {% if draft.rejectAllOfClaim.option === RejectAllOfClaimOption.ALREADY_PAID %}
      {{ tableStart('responseDetails', 'Response details') }}
      {{
        row(
          label = 'How much have you paid?',
          value = draft.rejectAllOfClaim.howMuchHaveYouPaid.amount | numeral,
          changeLink = FullRejectionPaths.howMuchHaveYouPaidPage.evaluateUri({ externalId: claim.externalId }),
          bottomBorder = false,
          bold = true
        )
      }}

      {{
        row(
          label = 'When did you pay this amount?',
          value = t(draft.rejectAllOfClaim.howMuchHaveYouPaid.date.toMoment() | date),
          bottomBorder = false,
          bold = true
        )
      }}

      {{
        row(
          label = 'How did you pay this amount?',
          value = draft.rejectAllOfClaim.howMuchHaveYouPaid.text,
          bold = true
        )
      }}

      {% if draft.rejectAllOfClaim.howMuchHaveYouPaid.amount < claim.totalAmountTillToday %}
        {{ row(label = 'Why do you disagree with the amount claimed?', value = draft.rejectAllOfClaim.whyDoYouDisagree.text, changeLink = FullRejectionPaths.whyDoYouDisagreePage.evaluateUri({ externalId: claim.externalId }), bold = true) }}

        {{
          timelineCheckAndSend(
            header = 'Timeline of what happened (optional)',
            timeline = draft.timeline.getPopulatedRowsOnly(),
            url = ResponsePaths.timelinePage.evaluateUri({ externalId: claim.externalId }),
            bottomBorder = false
          )
        }}

        {{ row(label = 'Comments about their timeline (optional)', value = draft.timeline.comment | default(''), bold = true) }}

        {{
          evidenceCheckAndSend(
            header = 'Your evidence (optional)',
            evidence = draft.evidence.getPopulatedRowsOnly(),
            url = ResponsePaths.evidencePage.evaluateUri({ externalId: claim.externalId }),
            bottomBorder = false
          )
        }}

        {{ row(label = 'Comments about their evidence (optional)', value = draft.evidence.comment | default(''), bold = true) }}

      {% endif %}
      {{ tableEnd() }}
    {% endif %}

    {% if draft.isResponseRejectedFullyWithDispute() %}
      {{ tableStart('responseDetails', 'Response details') }}
      {{
          row(
            label = 'Why you disagree with the claim',
            value = draft.defence.text,
            changeLink = ResponsePaths.defencePage.evaluateUri({ externalId: claim.externalId }),
            bold = true
          )
      }}

      {{
        timelineCheckAndSend(
          header = 'Timeline of what happened (optional)',
          timeline = draft.timeline.getPopulatedRowsOnly(),
          url = ResponsePaths.timelinePage.evaluateUri({ externalId: claim.externalId })
        )
      }}
      {{ row(label = 'Comments about their timeline (optional)', value = draft.timeline.comment | default(''), bold = true) }}

      {{
        evidenceCheckAndSend(
          header = 'Your evidence (optional)',
          evidence = draft.evidence.getPopulatedRowsOnly(),
          url = ResponsePaths.evidencePage.evaluateUri({ externalId: claim.externalId })
        )
      }}
      {{ row(label = 'Comments about their evidence (optional)', value = draft.evidence.comment | default(''), bold = true) }}
      {{ tableEnd() }}
    {% endif %}

    {% if statementOfMeansIsApplicable and draft.statementOfMeans %}
      {% include "./statement-of-means/check-and-send.njk" %}
    {% endif %}

    {% if draft.isResponsePartiallyAdmitted() and not draft.isResponsePartiallyAdmittedAndAlreadyPaid() %}
      {% if draft.partialAdmission.paymentIntention.paymentOption.isOfType(DefendantPaymentType.IMMEDIATELY) %}
        {{ tableStart('whenWillYouPay', 'When youâ€™ll pay') }}
        {{
        whenWillYouPayRow(
          value = t(draft.partialAdmission.paymentIntention.paymentOption.option.displayValue) | capitalize,
          url = PartAdmissionPaths.paymentOptionPage.evaluateUri({ externalId: claim.externalId })
        )
        }}
        {{ tableEnd() }}
      {% else %}
        {{
        notImmediatePayment(
          type = draft.partialAdmission.paymentIntention.paymentOption,
          paymentDate = draft.partialAdmission.paymentIntention.paymentDate,
          paymentPlan = draft.partialAdmission.paymentIntention.paymentPlan,
          explanation = draft.statementOfMeans.explanation.text,
          Paths = PartAdmissionPaths,
          externalId = claim.externalId,
          statementOfMeansIsApplicable = statementOfMeansIsApplicable
        )
        }}
      {% endif %}
    {% endif %}

    {% if draft.isResponseFullyAdmitted() and not draft.fullAdmission.paymentIntention.paymentOption.isOfType(DefendantPaymentType.IMMEDIATELY) %}
      {{
      notImmediatePayment(
        type = draft.fullAdmission.paymentIntention.paymentOption,
        paymentDate = draft.fullAdmission.paymentIntention.paymentDate,
        paymentPlan = draft.fullAdmission.paymentIntention.paymentPlan,
        explanation = draft.statementOfMeans.explanation.text,
        Paths = FullAdmissionPaths,
        externalId = claim.externalId,
        statementOfMeansIsApplicable = statementOfMeansIsApplicable
      )
      }}
    {% endif %}

    {% if ((admissionsApplicable
           and (draft.isResponsePartiallyAdmitted()
                or (draft.isResponseRejectedFullyBecausePaidWhatOwed()
                    and draft.rejectAllOfClaim.howMuchHaveYouPaid.amount < claim.totalAmountTillToday)))
          or draft.isResponseRejectedFullyWithDispute()) %}
      {{ freeMediationBlock(claim, mediationDraft, contactPerson, contactNumber, mediationPilot, mediationEnabled) }}
    {% endif %}


    {% if dqsEnabled %}
      {{ tableStart('hearingRequirements', 'Your hearing requirements') }}
      {% if directionsQuestionnaireDraft.supportRequired.languageSelected or directionsQuestionnaireDraft.supportRequired.signLanguageSelected or
        directionsQuestionnaireDraft.supportRequired.disabledAccessSelected or directionsQuestionnaireDraft.supportRequired.hearingLoopSelected or
        directionsQuestionnaireDraft.supportRequired.otherSupportSelected %}
        {{ rowWithMultipleValue(
            label = 'Support required for a hearing',
            values = [
              directionsQuestionnaireDraft.supportRequired.languageInterpreted + ' interpreter' if directionsQuestionnaireDraft.supportRequired.languageSelected === 'true',
              directionsQuestionnaireDraft.supportRequired.signLanguageInterpreted + ' interpreter' if directionsQuestionnaireDraft.supportRequired.signLanguageSelected === 'true',
              t('Disabled access') if directionsQuestionnaireDraft.supportRequired.disabledAccessSelected === 'true',
              t('Hearing loop') if directionsQuestionnaireDraft.supportRequired.hearingLoopSelected === 'true',
              t('Other:') if directionsQuestionnaireDraft.supportRequired.otherSupportSelected === 'true',
              directionsQuestionnaireDraft.supportRequired.otherSupport if directionsQuestionnaireDraft.supportRequired.otherSupportSelected === 'true'
            ],
            changeLink = DirectionsQuestionnairePaths.supportPage.evaluateUri({ externalId: claim.externalId }),
            bold = true
          ) }}
      {% else %}
        {{ row(
          label = 'Support required for a hearing',
          value = 'None',
          changeLink = DirectionsQuestionnairePaths.supportPage.evaluateUri({ externalId: claim.externalId }),
          bold = true
        ) }}
      {% endif %}
      {% if directionsQuestionnaireDraft.hearingLocation.courtName %}
        {{ row(
          label = 'Preferred hearing centre',
          value = directionsQuestionnaireDraft.hearingLocation.courtName,
          changeLink = DirectionsQuestionnairePaths.hearingLocationPage.evaluateUri({ externalId: claim.externalId }),
          bottomBorder = false,
          bold = true
        ) }}
      {% elseif directionsQuestionnaireDraft.hearingLocation.alternativeCourtName %}
        {{ row(
          label = 'Preferred hearing centre',
          value = directionsQuestionnaireDraft.hearingLocation.alternativeCourtName,
          changeLink = DirectionsQuestionnairePaths.hearingLocationPage.evaluateUri({ externalId: claim.externalId }),
          bottomBorder = false,
          bold = true
        ) }}
      {% endif %}
      {% if directionsQuestionnaireDraft.exceptionalCircumstances.exceptionalCircumstances.option === YesNoOption.YES.option %}
        {{ row(
          label = 'Briefly explain your reasons',
          value = directionsQuestionnaireDraft.exceptionalCircumstances.reason,
          changeLink = DirectionsQuestionnairePaths.hearingExceptionalCircumstancesPage.evaluateUri({ externalId: claim.externalId }),
          bottomBorder = false,
          bold = true
        ) }}
      {% endif %}
      {% if directionsQuestionnaireDraft.expertRequired.option.option === YesNoOption.YES.option %}
        {{ row(
            label = 'Have you already got a report written by an expert?',
            value = t(directionsQuestionnaireDraft.expertReports.declared.option) | capitalize,
            changeLink = DirectionsQuestionnairePaths.expertReportsPage.evaluateUri({ externalId: claim.externalId }),
            bottomBorder = false,
            topBorder = true,
            bold = true
          ) }}
      {% endif %}
      {% if directionsQuestionnaireDraft.expertReports.declared.option === YesNoOption.YES.option %}
        {% for report in directionsQuestionnaireDraft.expertReports.rows %}
          {{ rowWithMultipleValue(
            label = 'Report ' + loop.index,
            values = [
              t('Expertâ€™s name: {{  expertsName }}', { expertsName:  report.expertName }),
              t('Date of report: {{  reportDate }}', { reportDate:  report.reportDate.toMoment() | date })
            ],
            bottomBorder = false,
            bold = true
          ) }}
        {% endfor %}
      {% endif %}
      {% if directionsQuestionnaireDraft.permissionForExpert.option %}
        {{ row(
          label = 'Do you want the courtâ€™s permission to use an expert?',
          value = t(directionsQuestionnaireDraft.permissionForExpert.option.option) | capitalize,
          changeLink = DirectionsQuestionnairePaths.permissionForExpertPage.evaluateUri({ externalId: claim.externalId }),
          topBorder = true,
          bold = true
        ) }}
      {% endif %}
      {% if directionsQuestionnaireDraft.expertEvidence.expertEvidence %}
        {{ row(
          label = 'Does the claim involve something an expert can still examine?',
          value = t(directionsQuestionnaireDraft.expertEvidence.expertEvidence.option) | capitalize,
          changeLink = DirectionsQuestionnairePaths.expertEvidencePage.evaluateUri({ externalId: claim.externalId }),
          bottomBorder = false,
          bold = true
        ) }}
        {{ row(
          label = 'What is there to examine?',
          value = directionsQuestionnaireDraft.expertEvidence.whatToExamine,
          bold = true
        ) }}
      {% endif %}
      {% if directionsQuestionnaireDraft.whyExpertIsNeeded.explanation %}
        {{ row(
          label = 'Briefly explain why you believe an expert is needed',
          value = directionsQuestionnaireDraft.whyExpertIsNeeded.explanation,
          changeLink = DirectionsQuestionnairePaths.whyExpertIsNeededPage.evaluateUri({ externalId: claim.externalId }),
          bottomBorder = false,
          bold = true
        ) }}
      {% endif %}
      {{ row(
        label = 'Do you want to give evidence?',
        value = t(directionsQuestionnaireDraft.selfWitness.option.option) | capitalize,
        changeLink = DirectionsQuestionnairePaths.selfWitnessPage.evaluateUri({ externalId: claim.externalId }),
        topBorder = true,
        bold = true
      ) }}
      {% if directionsQuestionnaireDraft.otherWitnesses.otherWitnesses.option === YesNoOption.YES.option %}
        {{ row(
          label = 'Other witnesses',
          value = directionsQuestionnaireDraft.otherWitnesses.howMany,
          changeLink = DirectionsQuestionnairePaths.selfWitnessPage.evaluateUri({ externalId: claim.externalId }),
          bold = true
        ) }}
      {% else %}
        {{ row(
          label = 'Other witnesses',
          value = directionsQuestionnaireDraft.otherWitnesses.otherWitnesses.option | capitalize,
          changeLink = DirectionsQuestionnairePaths.selfWitnessPage.evaluateUri({ externalId: claim.externalId }),
          bold = true
        ) }}
      {% endif %}
      {% if directionsQuestionnaireDraft.availability.hasUnavailableDates %}
        {{ rowWithMultipleValue(
          label = 'Dates unavailable',
          values = datesUnavailable,
          changeLink = DirectionsQuestionnairePaths.hearingDatesPage.evaluateUri({ externalId: claim.externalId }),
          bold = true
        ) }}
      {% else %}
        {{ row(
          label = 'Dates unavailable',
          value = 'None',
          changeLink = DirectionsQuestionnairePaths.hearingDatesPage.evaluateUri({ externalId: claim.externalId }),
          bold = true
        ) }}
      {% endif %}
      {{ tableEnd() }}
    {% endif %}

    <div class="column-two-thirds">
      <div class="form-group">
        {{
          statementOfTruth(
            form,
            statementOfTruthType = statementOfTruthType,
            label = 'I believe that the facts stated in this response are true.',
            isQualified = (signatureType === SignatureType.QUALIFIED)
          )
        }}

        {{ submitButton('Submit response') }}

        <input type="hidden" name="type" value="{{ form.model.type }}">
      </div>
    </div>
  </form>
{% endblock %}
