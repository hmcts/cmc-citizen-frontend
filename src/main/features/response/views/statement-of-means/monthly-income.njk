{% extends "layout.njk" %}
{% from "form.njk" import csrfProtection, textInputInline, poundInputInline, poundInput, linkButton,
  saveAndContinueButton, errorSummary, checkboxOption, radioGroup, textInput %}

{% set heading = 'What regular income do you receive?' %}

{% block content %}

<p>{{ t('Select all that apply. The information you enter must be truthful and accurate.') }} </p>

<div class="grid-row">
  <div class="column-two-thirds">

    <form method="post" novalidate>
      {{ csrfProtection(csrf) }}

      {{ incomeAmountFrequency(label = 'Income from your job', name = 'salary', form = form, hint = 'Include wages, overtime, commission, bonuses') }}
      {{ incomeAmountFrequency(label = 'Universal Credit', name = 'universalCredit', form = form) }}
      {{ incomeAmountFrequency(label = 'Jobseeker’s Allowance (income based)', name = 'jobSeekerAllowanceIncome', form = form) }}
      {{ incomeAmountFrequency(label = 'Jobseeker’s Allowance (contribution based)', name = 'jobSeekerAllowanceContribution', form = form) }}
      {{ incomeAmountFrequency(label = 'Income Support', name = 'incomeSupport', form = form) }}
      {{ incomeAmountFrequency(label = 'Working Tax Credit', name = 'workingTaxCredit', form = form) }}
      {{ incomeAmountFrequency(label = 'Child Tax Credit', name = 'childTaxCredit', form = form) }}
      {{ incomeAmountFrequency(label = 'Child Benefit', name = 'childBenefit', form = form) }}
      {{ incomeAmountFrequency(label = 'Council Tax Support', name = 'councilTaxSupport', form = form) }}
      {{ incomeAmountFrequency(label = 'Pension (paid to you)', name = 'pension', form = form) }}
      {{ incomeAmountFrequency(label = 'Other', name = 'other', form = form, textBox = true) }}

      <div class="statement-of-means-container">
        {% if form.model and form.model.rows.length > 0 %}
        <div class="multiline">
          <div class="multiline-rows">
            <div class="triple-column mobile-hide">
              <div class="column-1 mobile-hide">
                <label id="description-label"  class="form-label-bold">{{ t('Name of income') }}</label>
              </div>
              <div class="column-4 mobile-hide">
                <label id="amount-label"  class="form-label-bold">{{ t('Amount') }}</label>
              </div>
            </div>

            {% for row in form.model.rows %}
              {{ incomeRow(loop.index0, form) }}
            {% endfor %}
          </div>
        </div>
        {% endif %}

        {% if form.model and form.model.canAddMoreRows() %}
          <div id="add-event-container" class="form-group">
            {{ linkButton('Add another source of income', 'action[addRow]', 'button button-secondary') }}
          </div>
        {% endif %}
      </div>


    </form>
  </div>
</div>

  {{ saveAndContinueButton() }}

{% endblock %}

{% macro incomeAmountFrequency(label, secondLabel = 'Amount received', name, form, hint, bold = false, textBox = false) %}
  {% set error = form.errorFor(name) %}

  {{ checkboxOption(label = label , name = name , form = form, value = 'true', hint = '', checked = false, bold = true, ariaExpand = true) }}

  <div class="panel panel-border-narrow {% if error %} form-group-error {% endif %}">

  {% if textBox %} {{ textInput(label = 'Source of income', name = 'otherIncome', form = form) }} {% endif %}

    <label for="{{ name }}" id="{{ name }}[label]" class="form-label{% if bold %}-bold{% endif %}">
      {{ t(secondLabel) }}

      {% if hint %}
        <span class="form-hint">{{ t(hint) }}</span>
      {% endif %}
    </label>
    {% if error %}
      <span class="error-message">{{ t(error) }}</span>
    {% endif %}
    {{ poundInputInline(name = name, label = label, form = form) }}

      {# <div class="form-group">
        {{ radioGroup(
        form = form,
        label = 'Received every',
        name = 'incomeExpenseSchedule',
        options = [
        {
          label: IncomeExpenseSchedule.EACH_WEEK.displayValue,
          value: IncomeExpenseSchedule.EACH_WEEK.value,
          checked: form.valueFor('incomeExpenseSchedule') === IncomeExpenseSchedule.EACH_WEEK
        },
        {
          label: IncomeExpenseSchedule.EVERY_TWO_WEEKS.displayValue,
          value: IncomeExpenseSchedule.EVERY_TWO_WEEKS.value,
          checked: form.valueFor('incomeExpenseSchedule') === IncomeExpenseSchedule.EVERY_TWO_WEEKS
        },
        {
          label: IncomeExpenseSchedule.EVERY_FOUR_WEEKS.displayValue,
          value: IncomeExpenseSchedule.EVERY_FOUR_WEEKS.value,
          checked: form.valueFor('incomeExpenseSchedule') === IncomeExpenseSchedule.EVERY_FOUR_WEEKS
        },
        {
          label: IncomeExpenseSchedule.EVERY_MONTH.displayValue,
          value: IncomeExpenseSchedule.EVERY_MONTH.value,
          checked: form.valueFor('incomeExpenseSchedule') === IncomeExpenseSchedule.EVERY_MONTH
        }
        ]
        ) }}
      </div> #}
  </div>
{% endmacro %}
