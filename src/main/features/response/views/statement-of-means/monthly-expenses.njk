{% extends "layout.njk" %}
{% from "form.njk" import csrfProtection, textInputInline, poundInputInline, poundInput, linkButton, option, saveAndContinueButton %}
{% from "../macro/statement-of-means/incomeExpenseSource.njk" import incomeExpenseSource %}

{% set heading = 'What are your regular expenses?' %}

{% block additional_scripts %}
  {% include "expandable-checkbox-option-scripts.njk" %}
  {% include "income-expense-calculation-scripts.njk" %}
{% endblock %}

{% macro expenseRow(index, form) %}

  {% set prefix = 'rows[' + index + ']' %}

  {% set amountKey = prefix + '[amount]' %}
  {% set amountValue = form.valueFor(amountKey) %}
  {% set amountError = form.errorFor(amountKey) %}

  {% set descriptionKey = prefix + '[description]' %}
  {% set descriptionValue = form.valueFor(descriptionKey) %}
  {% set descriptionError = form.errorFor(descriptionKey) %}

  {% set anyErrorOccurred = amountError or descriptionError %}
  <div class="triple-column{% if anyErrorOccurred %} form-group-error {% endif %}">

    {% if amountError %}<span id="{{ amountKey }}[label]" class="error-message">{{ t(amountError) }}</span>{% endif %}
    {% if descriptionError %}<span id="{{ descriptionKey }}[label]" class="error-message">{{ t(descriptionError) }}</span>{% endif %}

    <label class="form-label-bold mobile-show" for="{{ descriptionKey }}">{{ index + 1 }} {{ t('. Name of expense') }}</label>
    {{ textInputInline(name = descriptionKey, form = form, inputClass='column-1', ariaLabelledBy = 'description-label') }}
    {{ poundInputInline(name = amountKey, label = (index + 1) + '. How much?', form = form, ariaLabelledBy = 'amount-label') }}

  </div>

{% endmacro %}

{% block content %}
<div class="grid-row">
  <div class="column-two-thirds">

    <form method="post" novalidate class="income-expense-calculation">
      {{ csrfProtection(csrf) }}

      <p>{{ t('Select all that apply. The information you enter must be truthful and accurate.') }}</p>

      {{ expenseSource(form, name = 'mortgage', label = 'Mortgage', hint = 'Include all mortgages') }}
      {{ expenseSource(form, name = 'rent', label = 'Rent') }}
      {{ expenseSource(form, name = 'councilTax', label = 'Council Tax') }}
      {{ expenseSource(form, name = 'gas', label = 'Gas') }}
      {{ expenseSource(form, name = 'electricity', label = 'Electricity') }}
      {{ expenseSource(form, name = 'water', label = 'Water', hint = 'Include sewerage payments') }}
      {{ expenseSource(form, name = 'travel', label = 'Travel (work or school)') }}
      {{ expenseSource(form, name = 'schoolCosts', label = 'School costs (include clothing)') }}
      {{ expenseSource(form, name = 'foodAndHousekeeping', label = 'Food and housekeeping') }}
      {{ expenseSource(form, name = 'tvAndBroadband', label = 'TV and broadband') }}
      {{ expenseSource(form, name = 'hirePurchase', label = 'Hire purchase') }}
      {{ expenseSource(form, name = 'mobilePhone', label = 'Mobile phone') }}
      {{ expenseSource(form, name = 'maintenance', label = 'Maintenance payments') }}
      {{ expenseSources(form, name = 'other', label = 'Other') }}

      {{ linkButton('Recalculate total monthly expenditure', 'action[calculateMonthlyIncome]', 'button button-secondary calculate-monthly-income-expense') }}

      <p class="heading-small calculation-outcome-container">
        {{ t('Total monthly expenditure:') }} Â£<span class="total-monthly-income-expense"> {{ totalMonthlyExpense | default('0.00') }} </span>
      </p>

      {{ saveAndContinueButton() }}

    </form>
  </div>
</div>
{% endblock %}

{% macro expenseSource(form, name, label, hint) %}
  {% set checkboxName = name + 'Declared' %}

  {% call expandableCheckboxOption(form = form, name = checkboxName, value = 'true', checked = (form.valueFor(checkboxName) or (form.valueFor(name) and form.valueFor(name).populated)), label = label) %}
    {{ incomeExpenseSource(form = form, name = name, amountLabel = 'Amount paid', amountHint = hint, scheduleLabel = 'Paid every') }}
    {{ linkButton(name = 'action[resetExpenseSource][' + name + ']', label = 'Reset this expense source', class = 'link-button js-hidden') }}
  {% endcall %}
{% endmacro %}

{% macro expenseSources(form, name, label, hint) %}
  {% set checkboxName = name + 'Declared' %}

  {% call expandableCheckboxOption(form = form, name = checkboxName, value = 'true', checked = (form.valueFor(checkboxName) or (form.valueFor(name) and form.model.anyOtherExpensePopulated)), label = label) %}
    {% for source in form.model.other %}
      <div class="other-income-expense-source">
        {{ incomeExpenseSource(form = form, name = name + '[' + loop.index0 + ']', amountLabel = 'Amount paid', amountHint = hint, scheduleLabel = 'Paid every', nameEditable = true) }}
        {% if form.model.other.length > 1 %}
          {{ linkButton(name = 'action[removeOther][other.' + loop.index0 + ']', label = 'Remove this expense source', class = 'link-button') }}
        {% else %}
          {{ linkButton(name = 'action[reset][' + name + '.0]', label = 'Reset this expense source', class = 'link-button js-hidden') }}
        {% endif %}
      </div>
    {% endfor %}

    {{ linkButton(name = 'action[addOther]', label = 'Add another expense', class = 'button button-secondary') }}
  {% endcall %}
{% endmacro %}

{% macro expandableCheckboxOption(form, name, value, checked = false, label, hint = '', bold = false) %}
  {% set expandablePanelId = name + '-' + value | replace(' ', '') %}
  <div class="expandable-checkbox-option">
    <h3 class="heading-medium expandable">{{ t(label) }}</h3>
    {{ option(form = form, name = name, value = value, type = 'checkbox', checked = checked, label = label, hint = hint, bold = bold, hidden = true, className = 'expandable visually-hidden', dataTarget = expandablePanelId) }}
    <div class="panel panel-border-narrow expandable" id="{{ expandablePanelId }}">
      {{ caller() }}
    </div>
  </div>
{% endmacro %}
