{% from "table.njk" import tableStart, tableEnd, row %}

{% macro singularOrPlural(value, noun) %}

  {% set result =  value + ' ' + noun %}
  {% if value > 1 %}
    {% set result = result + 's' %}
  {% endif %}

  {{ result }}

{% endmacro %}

{% macro employmentStatus(statementOfMeans) %}

  {% if statementOfMeans.employment.isCurrentlyEmployed %}
    {% set employmentStatus = 'Employed' if statementOfMeans.employment.employed %}
    {% if statementOfMeans.employment.selfEmployed %}
      {% if employmentStatus %}
        {% set employmentStatus = employmentStatus + ' and ' %}
      {% endif %}
      {% set employmentStatus = employmentStatus + ' Self-employed ' %}
    {% endif %}
    {{ row('Employment status', employmentStatus, '') }}
  {% else %}
    {% if statementOfMeans.unemployed.option === UnemploymentType.UNEMPLOYED %}
      {% set years = statementOfMeans.unemployed.unemploymentDetails.years %}
      {% set months = statementOfMeans.unemployed.unemploymentDetails.months %}

      {% set status = statementOfMeans.unemployed.option.displayValue %}
      {% if years or months %}
        {% set status = status + ' for ' %}
        {% if years %}
          {% set status = status + singularOrPlural(years, 'year') %}
        {% endif %}
        {% if months %}
          {% set status = status + singularOrPlural(months, 'month') %}
        {% endif %}
      {% endif %}

      {{ row('Employment status', status, '') }}
    {% elseif statementOfMeans.unemployed.option === UnemploymentType.OTHER %}
      {{ row('Employment status', statementOfMeans.unemployed.otherDetails.details, '') }}
    {% else %}
      {{ row('Employment status', statementOfMeans.unemployed.option.displayValue, '') }}
    {% endif %}

  {% endif %}

{% endmacro %}

{{ tableStart('statementOfMeans', 'Your financial details') }}
{{ row('Where are you living?	', draft.statementOfMeans.residence.residenceType, statementOfMeansPaths.residencePage.evaluateUri({ externalId: claim.externalId })) }}

{{ row('Children', '', statementOfMeansPaths.dependantsPage.evaluateUri({ externalId: claim.externalId }), false) }}
{{ row('Do any children live with you?', 'Yes' if draft.statementOfMeans.dependants.hasAnyChildren else 'No', '', not draft.statementOfMeans.dependants.hasAnyChildren) }}

{% if draft.statementOfMeans.dependants.hasAnyChildren %}
  {% set noOfKids = draft.statementOfMeans.dependants.numberOfChildren %}
  {{ row('Under 11', noOfKids.under11, '', not (noOfKids.between11and15 or noOfKids.between16and19)) }}
  {{ row('11 to 15', noOfKids.between11and15, '', not noOfKids.between16and19) }}
  {{ row('16 to 19', noOfKids.between16and19, '') }}

  {% if draft.statementOfMeans.education %}
    {{ row('Number of children aged 16 to 19 full-time education or training', draft.statementOfMeans.education.value, statementOfMeansPaths.educationPage.evaluateUri({ externalId: claim.externalId })) }}
  {% endif %}
{% endif %}

{{ row('Maintenance', '', statementOfMeansPaths.maintenancePage.evaluateUri({ externalId: claim.externalId }), false) }}
{{ row('Do you or your partner pay maintenance for any children?', 'Yes' if draft.statementOfMeans.maintenance.option else 'No', '', not draft.statementOfMeans.maintenance.option) }}

{% if draft.statementOfMeans.maintenance.option %}
  {{ row('Number of children', draft.statementOfMeans.maintenance.value, '') }}
{% endif %}

{{ row('Employment', '', statementOfMeansPaths.employmentPage.evaluateUri({ externalId: claim.externalId }), false) }}
{{ row('Are you currently working?', 'Yes' if draft.statementOfMeans.employment.isCurrentlyEmployed else 'No', '', false) }}

{{ employmentStatus(draft.statementOfMeans) }}

{% if draft.statementOfMeans.employment.employed %}
  {{ row('Who employs you?', '', statementOfMeansPaths.employersPage.evaluateUri({ externalId: claim.externalId }), false) }}
  {% set indexOfLastRow = draft.statementOfMeans.employers.rows.length - 1 %}
  {% for employer in draft.statementOfMeans.employers.rows %}
    {{ row('Employer name', employer.employerName, '', false ) }}
    {{ row('Job title', employer.jobTitle, '', loop.index0 === indexOfLastRow ) }}
  {% endfor %}
{% endif %}

{% if draft.statementOfMeans.employment.selfEmployed %}
  {{ row('What are you self-employed as?', '', statementOfMeansPaths.selfEmployedPage.evaluateUri({ externalId: claim.externalId }), false) }}
  {{ row('Job title', draft.statementOfMeans.selfEmployed.jobTitle, '', false ) }}
  {{ row('Annual turnover', draft.statementOfMeans.selfEmployed.annualTurnover | numeral, '', not draft.statementOfMeans.selfEmployed.areYouBehindOnTax ) }}
  {% if draft.statementOfMeans.selfEmployed.areYouBehindOnTax %}
    {{ row('Are you behind on tax', 'Yes' if draft.statementOfMeans.selfEmployed.areYouBehindOnTax else 'No', '', false ) }}
    {{ row('Amount you owe?', draft.statementOfMeans.selfEmployed.amountYouOwe | numeral, '', false ) }}
    {{ row('Reason', draft.statementOfMeans.selfEmployed.reason) }}
  {% endif %}
{% endif %}

{% set numberOfBankAccounts = draft.statementOfMeans.bankAccounts.getPopulatedRowsOnly().length %}
{{ row('Bank accounts and savings', '', statementOfMeansPaths.bankAccountsPage.evaluateUri({ externalId: claim.externalId }), not numberOfBankAccounts) }}
{% set indexOfLastRow = numberOfBankAccounts - 1 %}

{% for account in draft.statementOfMeans.bankAccounts.getPopulatedRowsOnly() %}
  {{ row('Type of account', account.typeOfAccount.displayValue, '', false ) }}
  {{ row('Balance', account.balance | numeral, '', false) }}
  {{ row('Joint account', 'Yes' if account.isJoint else 'No', '', loop.index0 === indexOfLastRow ) }}
{% endfor %}

{% set income = draft.statementOfMeans.monthlyIncome %}
{% set otherIncome = income.getPopulatedRowsOnly() %}
{{ row('Monthly income', '', statementOfMeansPaths.monthlyIncomePage.evaluateUri({ externalId: claim.externalId }), false) }}
{{ row('Take home pay', income.salary | numeral, '', false) }}
{{ row('Universal Credit', income.universalCredit | numeral, '', false) }}
{{ row('Jobseeker’s Allowance (income based)', income.jobSeekerAllowanceIncome | numeral, '', false) }}
{{ row('Jobseeker’s Allowance (contribution based)', income.jobSeekerAllowanceContribution | numeral, '', false) }}
{{ row('Income Support', income.incomeSupport | numeral, '', false) }}
{{ row('Working Tax Credit', income.workingTaxCredit | numeral, '', false) }}
{{ row('Child Tax Credit', income.childTaxCredit | numeral, '', false) }}
{{ row('Child Benefit', income.childBenefit | numeral, '', false) }}
{{ row('Council Tax Support', income.councilTaxSupport | numeral, '', false) }}
{{ row('Pension (paid to you)', income.pension | numeral, '', false) }}
{{ row('Maintenance payments (paid to you)', income.maintenance | numeral, '', otherIncome.length === 0) }}

{% set indexOfLastRow = otherIncome.length - 1 %}
{% for incomeRow in otherIncome %}
  {{ row(incomeRow.description, incomeRow.amount | numeral, '', loop.index0 === indexOfLastRow ) }}
{% endfor %}

{% set expenses = draft.statementOfMeans.monthlyExpenses %}
{% set otherExpenses = expenses.getPopulatedRowsOnly() %}
{{ row('Monthly expenses', '', statementOfMeansPaths.monthlyExpensesPage.evaluateUri({ externalId: claim.externalId }), false) }}
{{ row('Mortgage', expenses.mortgage | numeral, '', false) }}
{{ row('Rent', expenses.rent | numeral, '', false) }}
{{ row('Council Tax', expenses.councilTax | numeral, '', false) }}
{{ row('Gas', expenses.gas | numeral, '', false) }}
{{ row('Electricity', expenses.electricity | numeral, '', false) }}
{{ row('Water', expenses.water | numeral, '', false) }}
{{ row('Travel (school or work)', expenses.travel | numeral, '', false) }}
{{ row('School costs (include clothing)', expenses.schoolCosts | numeral, '', false) }}
{{ row('Food and Housekeeping', expenses.foodAndHousekeeping | numeral, '', false) }}
{{ row('TV and Broadband', expenses.tvAndBroadband | numeral, '', false) }}
{{ row('Mobile phone', expenses.mobilePhone | numeral, '', false) }}
{{ row('Maintenance payments', expenses.maintenance | numeral, '', otherIncome.length === 0) }}

{% set indexOfLastRow = otherExpenses.length - 1 %}
{% for expenseRow in otherExpenses %}
  {{ row(expenseRow.description, expenseRow.amount | numeral, '', loop.index0 === indexOfLastRow ) }}
{% endfor %}

{{ row('Debts', '', statementOfMeansPaths.debtsPage.evaluateUri({ externalId: claim.externalId }), false) }}
{{ row('Do you have any debts?', 'Yes' if draft.statementOfMeans.debts.hasAnyDebts else 'No', '', not draft.statementOfMeans.debts.hasAnyDebts) }}
{% set debtRows = draft.statementOfMeans.debts.getPopulatedRowsOnly() %}
{% set indexOfLastRow = debtRows.length - 1 %}

{% for debtRow in debtRows %}
  {{ row('Debt', debtRow.debt, '', false ) }}
  {{ row('Total owed', debtRow.totalOwed | numeral, '', false) }}
  {{ row('Monthly Payments', debtRow.monthlyPayments | numeral, '', loop.index0 === indexOfLastRow ) }}
{% endfor %}

{{ row('Court orders', '', statementOfMeansPaths.courtOrdersPage.evaluateUri({ externalId: claim.externalId }), false) }}
{{ row('Are you paying any other court orders?', 'Yes' if draft.statementOfMeans.courtOrders.hasAnyCourtOrders else 'No', '', not draft.statementOfMeans.courtOrders.hasAnyCourtOrders) }}
{% set courtOrdersRows = draft.statementOfMeans.courtOrders.getPopulatedRowsOnly() %}
{% set indexOfLastRow = courtOrdersRows.length - 1 %}

{% for courtOrderRow in courtOrdersRows %}
  {{ row('Details about court orders', courtOrderRow.details, '', false ) }}
  {{ row('Amount you owe', courtOrderRow.amount | numeral, '', loop.index0 === indexOfLastRow) }}
{% endfor %}

{{ tableEnd() }}
