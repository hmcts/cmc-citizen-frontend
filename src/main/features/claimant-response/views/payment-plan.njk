{% extends "layout.njk" %}
{% from "form.njk" import linkButton, saveAndContinueButton, errorSummary, csrfProtection, radioGroup, poundInput, textArea %}
{% from "date.njk" import dateInput %}

{% block additional_scripts %}
  {% include "payment-plan-calculation-scripts.njk" %}
{% endblock %}

{% block content %}
  <div class="column-two-thirds">

    <p class="panel">{{ t('The court will review your suggestion and may reject it if it’s more than the defendant can afford.') }}</p>

    <p>{{ t('Total claim amount is {{ totalAmount }}.', { totalAmount: totalAmount | numeral }) }} </p>

    <form method="post" novalidate class="payment-plan-calculation">
      {{ csrfProtection(csrf) }}

      <h2 class="heading-small">{{ t('Your finances') }}</h2>
      <p>{{ t('Your total monthly income is {{ monthlyIncome }}',
          { monthlyIncome: monthlyIncome | numeral }) }}</p>
      <p>{{ t('Your total monthly expenses is {{ monthlyExpenses }}',
          { monthlyExpenses: monthlyExpenses | numeral }) }}</p>

      <input type="hidden" name="totalAmount" value="{{ totalAmount }}"/>

      <div class="form-group">
        <fieldset>
          <legend class="visually-hidden">{{ t('Regular payments of') }}</legend>
          {{ poundInput('Regular payments of:', 'instalmentAmount', form, 'For example, £10', bold = true) }}
        </fieldset>
      </div>

      <div class="form-group">
        {{ radioGroup(
        form = form,
        label = 'How often do you want to receive payments?',
        name = 'paymentSchedule',
        options = [
        {
          label: PaymentSchedule.EACH_WEEK.displayValue,
          value: PaymentSchedule.EACH_WEEK.value,
          checked: form.valueFor('paymentSchedule') === PaymentSchedule.EACH_WEEK
        },
        {
          label: PaymentSchedule.EVERY_TWO_WEEKS.displayValue,
          value: PaymentSchedule.EVERY_TWO_WEEKS.value,
          checked: form.valueFor('paymentSchedule') === PaymentSchedule.EVERY_TWO_WEEKS
        },
        {
          label: PaymentSchedule.EVERY_MONTH.displayValue,
          value: PaymentSchedule.EVERY_MONTH.value,
          checked: form.valueFor('paymentSchedule') === PaymentSchedule.EVERY_MONTH
        }
        ]
        ) }}
      </div>

      {{ linkButton('Calculate length of repayment plan', 'action[calculatePaymentPlan]', 'button button-secondary calculateLengthOfRepayment') }}

      <h2 class="heading-small">{{ t('Length of repayment plan') }}</h2>
      <p id="lengthOfRepayment" class="lengthOfRepayment"> {{ paymentLength | default('-') }} </p>

      <div class="form-group">
        <fieldset>
          <legend class="visually-hidden">{{ t('Date for first instalment') }}</legend>
          {{ dateInput('firstPaymentDate', form, hint = t('For example, {{ nextMonth }}', { nextMonth: 'now' | addDays(30) | inputDate }), label = 'Date for first instalment') }}
        </fieldset>
      </div>

      {{ saveAndContinueButton() }}
    </form>
  </div>
{% endblock %}
