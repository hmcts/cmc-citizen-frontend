{% from "table.njk" import tableStart, tableEnd, row %}

{% macro employmentStatus(statementOfMeans) %}

  {% if statementOfMeans.employment.declared %}
    {% set employmentStatus = 'Employed' if statementOfMeans.employment.employed %}
    {% if statementOfMeans.employment.selfEmployed %}
      {% if employmentStatus %}
        {% set employmentStatus = employmentStatus + ' and ' %}
      {% endif %}
      {% set employmentStatus = employmentStatus + ' Self-employed ' %}
    {% endif %}
    {{ row('Type of job', employmentStatus, '', bold = true) }}
  {% else %}
    {% if statementOfMeans.unemployment.option === UnemploymentType.UNEMPLOYED %}
      {% set years = statementOfMeans.unemployment.unemploymentDetails.years %}
      {% set months = statementOfMeans.unemployment.unemploymentDetails.months %}

      {% set status = statementOfMeans.unemployment.option.displayValue %}
      {% if years or months %}
        {% set status = status + ' for ' %}
        {% if years %}
          {% set status = status + singularOrPlural(years, 'year') %}
        {% endif %}
        {% if months %}
          {% set status = status + singularOrPlural(months, 'month') %}
        {% endif %}
      {% endif %}

      {{ row('Type of job', status, '', bold = true) }}
    {% elseif statementOfMeans.unemployment.option === UnemploymentType.OTHER %}
      {{ row('Type of job', statementOfMeans.unemployment.otherDetails.details, '', bold = true) }}
    {% else %}
      {{ row('Type of job', statementOfMeans.unemployment.option.displayValue, '', bold = true) }}
    {% endif %}

  {% endif %}

{% endmacro %}

{% macro financialDetailsTable(label, claim) %}
  <details>
    <summary>{{ t(label) }}</summary>
    {{ tableStart('financialDetails', 'Bank and savings accounts') }}

    {% set numberOfBankAccounts = claim.response.statementOfMeans.bankAccounts.length %}
    {% set indexOfLastRow = numberOfBankAccounts - 1 %}

    {% for account in claim.response.statementOfMeans.bankAccounts %}
      {% if numberOfBankAccounts === 1 %}
        {{ row('Type of account', account.type | renderBankAccountType, '', false, bold = false ) }}
      {% else %}
        {{ row(loop.index0 + 1 + '. Type of account', account.type | renderBankAccountType, '', false, bold = false ) }}
      {% endif %}
      {{ row('Balance', account.balance | numeral, '', false, bold = false) }}
      {{ row('Joint account', 'Yes' if account.joint else 'No', '', loop.index0 === indexOfLastRow, bold = false ) }}
    {% endfor %}

    {{ row('Where are you living?	', claim.response.statementOfMeans.residence.type | renderResidenceType, bold = false, '') }}

    {{ row('Children', '', '', false) }}
    {{ row('Do any children live with you?', 'Yes' if claim.response.statementOfMeans.dependant.children else 'No', '', not claim.response.statementOfMeans.dependant.children, bold = false) }}

    {% if claim.response.statementOfMeans.dependant.children %}
      {% set noOfKids = claim.response.statementOfMeans.dependant.children %}
      {{ row('Under 11', noOfKids.ageGroupType | default('0'), '', not (noOfKids.between11and15 or noOfKids.between16and19), bold = false) }}
      {{ row('11 to 15', noOfKids.ageGroupType | default('0'), '', not noOfKids.between16and19, bold = false) }}
      {{ row('How many are aged 16 to 19?', noOfKids.between16and19 | default('0'), '', bold = false) }}
    {% endif %}

    {{ row('Employment details', '', '', false, bold = true) }}
    {{ row('Do they have a job?', 'Yes' if claim.response.statementOfMeans.employment.employers.length > 0 else 'No', '', false, bold = false) }}
    {#{{ employmentStatus(claim.response.statementOfMeans) }}#}

    {% if claim.response.statementOfMeans.employment.employers.length > 0 %}
      {{ row('Who employs you?', '', '', false, bold = true) }}
      {% set indexOfLastRow = claim.response.statementOfMeans.employment.employers.length - 1 %}
      {% for employer in claim.response.statementOfMeans.employment.employers %}
        {{ row('Employer name', employer.name, '', false, bold = false ) }}
        {{ row('Job title', employer.jobTitle, '', loop.index0 === indexOfLastRow, bold = false ) }}
      {% endfor %}
    {% endif %}

    {% if claim.response.statementOfMeans.employment %}
      {{ row('Self-employment details', '', '', false, bold = true) }}
      {{ row('Job title', claim.response.statementOfMeans.employment.selfEmployment.jobTitle, '', false, bold = false ) }}
      {{ row('Annual turnover', claim.response.statementOfMeans.employment.selfEmployment.annualTurnover | numeral, '', false, bold = false ) }}
      {{ row('Are you behind on tax', 'Yes' if claim.response.statementOfMeans.employment.selfEmployment.onTaxPayments else 'No', '', not claim.response.statementOfMeans.onTaxPayments, bold = false ) }}
      {{ row('Amount you owe?', claim.response.statementOfMeans.employment.selfEmployment.onTaxPayments.amountYouOwe | numeral, '', false, bold = false ) }}
      {{ row('Reason', claim.response.statementOfMeans.employment.selfEmployment.onTaxPayments.reason, bold = false) }}
    {% endif %}

    {% set income = claim.response.statementOfMeans.incomes.length %}
    {{ row('Monthly income', '', '', false, bold = true) }}

    {% for income in claim.response.statementOfMeans.incomes %}
      {{ row(income.type | renderIncomeType, income.amountReceived | numeral, '', false, bold = false) }}
    {% endfor %}

      {% if income.anyOtherIncomePopulated %}
        {% for source in income.otherSources %}
          {{ row(source.otherSource, source.amountReceived | numeral, '', bottomBorder = false, bold = false ) }}
        {% endfor %}
      {% endif %}

    {% set expenses = claim.response.statementOfMeans.expenses.length %}
    {{ row('Monthly expenses', '', '', bottomBorder = false, bold = true, topBorder = true) }}

    {% for expense in claim.response.statementOfMeans.expenses %}
      {{ row(expense.type | renderExpenseType, expense.amountPaid | numeral, '', false, bold = false) }}
    {% endfor %}

    {% if expenses.anyOtherPopulated %}
      {% for expense in expenses.other %}
        {{ row(expense.otherSource, expense.amountPaid | numeral, '', bottomBorder = false, bold = false ) }}
      {% endfor %}
    {% endif %}

    {{ row('Debts', '', '', bottomBorder = false, bold = true, topBorder = true) }}
    {{ row('Do you have any debts?', 'Yes' if claim.response.statementOfMeans.debts else 'No', '', not draft.statementOfMeans.debts.declared, bold = false) }}
    {% set debtRows = claim.response.statementOfMeans.debts.length %}
    {% set indexOfLastRow = debtRows.length - 1 %}

    {% for debtRow in claim.response.statementOfMeans.debts %}
      {% if debtRows.length === 1 %}
        {{ row('Debt' , debtRow.description, '', false, bold = false ) }}
      {% else %}
        {{ row(loop.index0 + 1 + '. Debt' , debtRow.description, '', false, bold = false ) }}
      {% endif %}

      {{ row('Total owed', debtRow.totalOwed | numeral, '', false, bold = false) }}
      {{ row('Monthly Payments', debtRow.monthlyPayments | numeral, '', loop.index0 === indexOfLastRow, bold = false ) }}
    {% endfor %}

    {{ row('Court orders', '', '', false, bold = true) }}
    {{ row('Has a court ordered you to pay anyone else?', 'Yes' if claim.response.statementOfMeans.courtOrders else 'No', '', not claim.response.statementOfMeans.courtOrders.declared, bold = false) }}
    {% set courtOrdersRows = claim.response.statementOfMeans.courtOrders.length %}
    {% set indexOfLastRow = courtOrdersRows.length - 1 %}

    {% for courtOrderRow in claim.response.statementOfMeans.courtOrders %}
      {{ row('Claim number', courtOrderRow.claimNumber, '', false, bold = false ) }}
      {{ row('Amount you owe', courtOrderRow.amountOwed | numeral, '', loop.index0 === indexOfLastRow, bold = false) }}
    {% endfor %}

    {{ tableEnd() }}
  </details>
{% endmacro %}
