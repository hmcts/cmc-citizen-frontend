"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const party_type_1 = require("integration-test/data/party-type");
const test_data_1 = require("integration-test/data/test-data");
const user_1 = require("integration-test/tests/citizen/home/steps/user");
const offer_1 = require("integration-test/tests/citizen/offers/steps/offer");
const userSteps = new user_1.UserSteps();
const offerSteps = new offer_1.OfferSteps();
Feature('Offers');
Scenario('I can as a defendant make an offer, accept offer and counter sign the agreement @citizen', { retries: 3 }, async (I) => {
    const claimantEmail = userSteps.getClaimantEmail();
    const defendantEmail = userSteps.getDefendantEmail();
    const claimRef = await I.createClaim(test_data_1.createClaimData(party_type_1.PartyType.INDIVIDUAL, party_type_1.PartyType.INDIVIDUAL), claimantEmail);
    I.respondToClaim(claimRef, claimantEmail, test_data_1.createResponseData(party_type_1.PartyType.INDIVIDUAL), defendantEmail);
    userSteps.login(defendantEmail);
    offerSteps.makeOfferFromDashboard(claimRef);
    I.see('We’ve sent your offer to ' + test_data_1.createClaimant(party_type_1.PartyType.INDIVIDUAL).name);
    I.click('Sign out');
    userSteps.login(claimantEmail);
    offerSteps.acceptOfferFromDashboard(claimRef);
    I.click('Sign out');
    userSteps.login(defendantEmail);
    offerSteps.countersignOfferFromDashboard(claimRef);
    offerSteps.viewClaimFromDashboard(claimRef);
    I.see('You’ve both signed a legal agreement. The claim is now settled.');
});
Scenario('I can make an offer as a defendant to a claimant and have the claimant reject it @nightly', { retries: 3 }, async (I) => {
    const claimantEmail = userSteps.getClaimantEmail();
    const defendantEmail = userSteps.getDefendantEmail();
    const claimRef = await I.createClaim(test_data_1.createClaimData(party_type_1.PartyType.INDIVIDUAL, party_type_1.PartyType.INDIVIDUAL), claimantEmail);
    I.respondToClaim(claimRef, claimantEmail, test_data_1.createResponseData(party_type_1.PartyType.INDIVIDUAL), defendantEmail);
    userSteps.login(defendantEmail);
    offerSteps.makeOfferFromDashboard(claimRef);
    I.see('We’ve sent your offer to ' + test_data_1.createClaimant(party_type_1.PartyType.INDIVIDUAL).name);
    I.click('Sign out');
    userSteps.login(claimantEmail);
    offerSteps.rejectOfferFromDashboard(claimRef);
    I.click('Sign out');
    userSteps.login(defendantEmail);
    offerSteps.viewClaimFromDashboard(claimRef);
    I.see('The claimant has rejected your offer to settle the claim.');
});
