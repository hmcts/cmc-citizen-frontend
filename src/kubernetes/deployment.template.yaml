# Example Kubernetes resource template
#
# All variables are replaced at deployment time with environment variables.
#
# The following variables are derived as follows by the pipeline. DO NOT CHANGE:
#
#   - NAMESPACE:    product
#   - SERVICE_NAME: product-component-branch
#   - IMAGE_NAME:   registry-name/hmcts/product-component:branch
#
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${SERVICE_NAME}
  template:
    metadata:
      labels:
        app: ${SERVICE_NAME}
    spec:
      containers:
        - image: ${IMAGE_NAME}
          name: ${SERVICE_NAME}
           # These are obtained from environment variables.  If it's
          # an environment variable, it can be used here.  Projects
          # would usually source custom values from:
          #   - Jenkins Azure Keyvault plugin (e.g. secrets)
          #   - Your project's Jenkinsfile
          env:
            - name: REFORM_TEAM
              value: 'cmc'
            - name: REFORM_SERVICE_NAME
              value: 'citizen-frontend'
            - name: NODE_ENV
              value: 'production'
          envFrom:
            - configMapRef:
                name: ${SERVICE_NAME}-config
           # These may be adjusted, but be mindful please
          resources:
            requests:
              memory: "128Mi"
              cpu: "0.1"
            limits:
              memory: "512Mi"
              cpu: "1"
           # This is the port your process is listening on in the container
          ports:
            - containerPort: 3000
              name: http
          imagePullPolicy: Always
---
#
# Service
#
apiVersion: v1
kind: Service
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
  labels:
    app: ${SERVICE_NAME}
spec:
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 3000
  selector:
    app: ${SERVICE_NAME}
---
#
# Ingress
#
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: ${AKS_DOMAIN}
    http:
      paths:
      - path: /${SERVICE_NAME}
        backend:
          serviceName: ${SERVICE_NAME}
          servicePort: 80
