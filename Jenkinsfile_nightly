#!groovy

properties([
  pipelineTriggers([cron('H 05 * * *')]),
  parameters([
    string(name: 'URL_TO_TEST', defaultValue: 'https://cmc-citizen-frontend-aat.service.core-compute-aat.internal', description: 'The URL you want to run these tests against'),
  ])
])

@Library("Infrastructure")

def product = "cmc"
def component = "citizen-frontend"

List<LinkedHashMap<String, Object>> secrets = [
  //for smoke/functional tests
  secret('smoke-test-citizen-username', 'SMOKE_TEST_CITIZEN_USERNAME'),
  secret('smoke-test-user-password', 'SMOKE_TEST_USER_PASSWORD'),
  secret('citizen-oauth-client-secret', 'OAUTH_CLIENT_SECRET'),
]
static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}
// THESE CAN BE PICKED UP IN INTEGRATION-TEST CODE DIRECTLY
env.IDAM_URL = 'https://preprod-idamapi.reform.hmcts.net:3511'
env.CLAIM_STORE_URL = 'http://cmc-claim-store-aat.service.core-compute-aat.internal'
env.FEATURE_ADMISSIONS = 'true'
env.FEATURE_TESTING_SUPPORT = 'true'
// add any others needed to selective testing...

withNightlyPipeline("nodejs", product, component) {
  env.TEST_URL = params.URL_TO_TEST

  loadVaultSecrets(secrets)
  setVaultName('cmc')
  enableCrossBrowserTest()
  enableSecurityScan()
  enableFullFunctionalTest(180)

  after('crossBrowserTest') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
  }
}
