#!groovy

properties([
  pipelineTriggers([cron('H 05 * * *')]),
  parameters([
    string(name: 'URL_TO_TEST', defaultValue: 'https://moneyclaims.aat.platform.hmcts.net', description: 'The URL you want to run these tests against'),
  ])
])

@Library("Infrastructure")

def product = "cmc"
def component = "citizen-frontend"
def secrets = [
  'cmc-${env}':
    [
      secret('citizen-oauth-client-secret', 'OAUTH_CLIENT_SECRET'),
      secret('smoke-test-citizen-username', 'SMOKE_TEST_CITIZEN_USERNAME'),
      secret('smoke-test-user-password', 'SMOKE_TEST_USER_PASSWORD')
    ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

// THESE CAN BE PICKED UP IN INTEGRATION-TEST CODE DIRECTLY
// NOTE: they will not be overridden by terraform outputs - so use AAT settings
env.IDAM_URL = 'https://idam-api.aat.platform.hmcts.net'
env.CLAIM_STORE_URL = 'http://cmc-claim-store-aat.service.core-compute-aat.internal'
env.FEATURE_ADMISSIONS = 'true'
env.FEATURE_MEDIATION = 'true'
env.FEATURE_DIRECTIONS_QUESTIONNAIRE = 'true'
env.FEATURE_TESTING_SUPPORT = 'true'
env.FEATURE_INVERSION_OF_CONTROL = 'true'
env.FEATURE_PCQ = 'true'
// add any others needed to selective testing...

// SAUCELABS config - configured on Jenkins (also IDAM_URL above used)
env.SAUCELABS_BROWSER = 'chrome_win_latest'
env.SAUCELABS_TUNNEL_IDENTIFIER = 'reformtunnel'
env.TEST_URL = params.URL_TO_TEST //required
env.CITIZEN_APP_URL = params.URL_TO_TEST //required
env.CHUNKS = 3

withNightlyPipeline("nodejs", product, component) {
  loadVaultSecrets(secrets)
//  enableCrossBrowserTest()  //TODO: DO NOT MERGE!!! Re-enable once security scan proven to work!!!
  enableSecurityScan()
//  enableFullFunctionalTest(200) //TODO: DO NOT MERGE!!! Re-enable once security scan proven to work!!!

  after('crossBrowserTest') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
  }
}
