#!groovy
//noinspection GroovyUnusedAssignment
@Library("Infrastructure") _

//noinspection GroovyAssignabilityCheck
properties([
		parameters([
			choice(name: 'ENVIRONMENT', choices: 'saat\nsprod', description: 'Environment where code should be build and deployed')
		])
])

List<LinkedHashMap<String, Object>> secrets = [
  secret('smoke-test-citizen-username', 'SMOKE_TEST_CITIZEN_USERNAME'),
  secret('smoke-test-user-password', 'SMOKE_TEST_USER_PASSWORD'),
  secret('os-postcode-lookup-api-key', 'POSTCODE_LOOKUP_API_KEY'),
  secret('AppInsightsInstrumentationKey', 'APPINSIGHTS_INSTRUMENTATIONKEY'),
  secret('citizen-oauth-client-secret', 'OAUTH_CLIENT_SECRET'),
  secret('cmc-s2s-secret', 'IDAM_S2S_TOTP_SECRET'),
  secret('citizen-draft-store-primary', 'DRAFT_STORE_SECRET_PRIMARY'),
  secret('citizen-draft-store-secondary', 'DRAFT_STORE_SECRET_SECONDARY'),
  secret('citizen-cookie-encryption-key', 'COOKIE_ENCRYPTION_KEY'),
  secret('staff-email', 'CONTACT_EMAIL')
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}


withParameterizedPipeline('nodejs', 'cmc', 'citizen-frontend', params.ENVIRONMENT, 'sandbox') {
  after('build') {
    sh 'yarn setup'
  }

  loadVaultSecrets(secrets)
}
