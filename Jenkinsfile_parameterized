#!groovy
//noinspection GroovyUnusedAssignment
@Library("Infrastructure") _

//noinspection GroovyAssignabilityCheck
properties([
		parameters([
			choice(name: 'ENVIRONMENT', choices: 'saat\nsprod', description: 'Environment where code should be build and deployed')
		])
])

List<LinkedHashMap<String, Object>> secrets = [
  secret('AatTestUserUsername', 'SMOKE_TEST_CITIZEN_USERNAME'),
  secret('AatTestUserPassword', 'SMOKE_TEST_USER_PASSWORD')
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}


withParameterizedPipeline('nodejs', 'cmc', 'citizen-frontend', params.ENVIRONMENT, 'sandbox') {
  afterCheckout {
    if (env.BRANCH_NAME == "master") {
      sh 'echo "This is master"'
    } else {
      sh "echo 'On branch ${env.BRANCH_NAME}'"
      sh "git fetch origin feature/ROC-3550-Test-push-to-branch:feature/ROC-3550-Test-push-to-branch"
      sh "git push --verbose --force origin feature/ROC-3550-Test-push-to-branch"
    }
  }

  after('build') {
    sh 'yarn setup'
  }

  loadVaultSecrets(secrets)
}
